name: Build/release

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]
  workflow_call:
    inputs:
      is-release:
        required: true
        type: boolean
      version:
        required: true
        type: string

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]

    runs-on: ${{ matrix.os }}

    env:
      SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.snapcraft_token }}
      IS_RELEASE: ${{ inputs.is-release }}

    steps:
    
      - name: Download version file
        uses: actions/download-artifact@v2
        with:
          name: version
      - name: Set version to ENV_VAR
        shell: bash
        run: |
          export VERSION=`cat version`
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV
          rm version
          
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          ref: ${{env.APP_VERSION}}

      - name: Install Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v1
        if: ${{ env.IS_RELEASE && startsWith(matrix.os, 'ubuntu') }}

      - name: Prepare for app notarization
        if: ${{ env.IS_RELEASE && startsWith(matrix.os, 'macos') }}
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.github_token }}
          release: ${{ env.IS_RELEASE }}
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}
        env:
          # macOS notarization API key
          API_KEY_ID: ${{ secrets.api_key_id }}
          API_KEY_ISSUER_ID: ${{ secrets.api_key_issuer_id }}

      - name: log notarizing log file
        if: ${{ startsWith(matrix.os, 'macos') && failure() }}
        run: cat notarization-error.log

